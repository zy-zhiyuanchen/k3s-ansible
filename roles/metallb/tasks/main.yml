---
- name: Wait for Kubernetes API to be ready
  ansible.builtin.command:
    cmd: kubectl get nodes
  register: kubectl_result
  until: kubectl_result.rc == 0
  retries: 30
  delay: 10
  changed_when: false
  environment:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml

- name: Add MetalLB Helm repository
  ansible.builtin.command:
    cmd: helm repo add metallb https://metallb.github.io/metallb
  environment:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml
  register: helm_repo_add
  changed_when: "'already exists' not in helm_repo_add.stderr"
  failed_when: helm_repo_add.rc != 0 and 'already exists' not in helm_repo_add.stderr

- name: Update Helm repositories
  ansible.builtin.command:
    cmd: helm repo update
  environment:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml
  changed_when: false

- name: Check if MetalLB is already installed
  ansible.builtin.command:
    cmd: helm list -n {{ metallb_namespace }} -o json
  environment:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml
  register: helm_list_result
  changed_when: false
  failed_when: false

- name: Parse Helm list output
  when: helm_list_result.rc == 0
  ansible.builtin.set_fact:
    metallb_helm_releases: "{{ helm_list_result.stdout | from_json }}"

- name: Check if MetalLB release exists
  ansible.builtin.set_fact:
    metallb_installed: "{{ metallb_helm_releases | selectattr('name', 'equalto', 'metallb') | list | length > 0 }}"
  when: metallb_helm_releases is defined

- name: Get current MetalLB version
  when: metallb_installed | default(false)
  ansible.builtin.set_fact:
    installed_metallb_version: "{{ (metallb_helm_releases | selectattr('name', 'equalto', 'metallb') | first).app_version }}"

- name: Determine if MetalLB needs installation or upgrade
  ansible.builtin.set_fact:
    metallb_needs_action: >-
      {{
        not metallb_installed | default(false) or
        metallb_force_upgrade |bool or
        (installed_metallb_version is defined and installed_metallb_version is version(metallb_version, '<'))
      }}

- name: Create MetalLB namespace
  ansible.builtin.command:
    cmd: kubectl create namespace {{ metallb_namespace }}
  environment:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml
  register: create_namespace_result
  changed_when: create_namespace_result.rc == 0
  failed_when: create_namespace_result.rc != 0 and 'already exists' not in create_namespace_result.stderr

- name: Install or upgrade MetalLB via Helm
  when: metallb_needs_action |bool
  block:
    - name: Display action being performed
      ansible.builtin.debug:
        msg: >-
          {% if not metallb_installed | default(false) %}
          Installing MetalLB {{ metallb_chart_version }} for the first time
          {% else %}
          Upgrading MetalLB from {{ installed_metallb_version | default('unknown') }} to {{ metallb_chart_version }}
          {% endif %}

    - name: Install/Upgrade MetalLB using Helm
      ansible.builtin.command:
        cmd: >
          helm upgrade --install metallb metallb/metallb
          --namespace {{ metallb_namespace }}
          --version {{ metallb_chart_version }}
          --wait
          --timeout=10m
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml
      register: metallb_helm_result
      changed_when: metallb_helm_result.rc == 0

    - name: Wait for MetalLB pods to be ready
      ansible.builtin.command:
        cmd: kubectl wait --namespace {{ metallb_namespace }} --for=condition=ready pod --selector=app.kubernetes.io/name=metallb --timeout=300s
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml
      register: metallb_wait_result
      changed_when: false

- name: Configure MetalLB IP Pools
  when: metallb_ip_pools | length > 0
  block:
    - name: Create MetalLB IPAddressPool manifests
      ansible.builtin.template:
        src: ipaddresspool.yaml.j2
        dest: "/tmp/metallb-ipaddresspool-{{ item.name }}.yaml"
        mode: "0644"
      loop: "{{ metallb_ip_pools }}"
      loop_control:
        label: "{{ item.name }}"

    - name: Apply MetalLB IPAddressPool manifests
      ansible.builtin.command:
        cmd: kubectl apply -f "/tmp/metallb-ipaddresspool-{{ item.name }}.yaml"
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml
      loop: "{{ metallb_ip_pools }}"
      loop_control:
        label: "{{ item.name }}"
      register: metallb_pool_result
      changed_when: metallb_pool_result.rc == 0

    - name: Create MetalLB L2Advertisement manifest
      ansible.builtin.template:
        src: l2advertisement.yaml.j2
        dest: "/tmp/metallb-l2advertisement.yaml"
        mode: "0644"

    - name: Apply MetalLB L2Advertisement manifest
      ansible.builtin.command:
        cmd: kubectl apply -f /tmp/metallb-l2advertisement.yaml
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml
      register: metallb_l2_result
      changed_when: metallb_l2_result.rc == 0

    - name: Clean up temporary manifests
      ansible.builtin.file:
        path: "/tmp/metallb-{{ item }}"
        state: absent
      loop:
        - l2advertisement.yaml
      loop_control:
        label: "{{ item }}"

    - name: Clean up IPAddressPool manifests
      ansible.builtin.file:
        path: "/tmp/metallb-ipaddresspool-{{ item.name }}.yaml"
        state: absent
      loop: "{{ metallb_ip_pools }}"
      loop_control:
        label: "{{ item.name }}"

- name: Verify MetalLB installation
  ansible.builtin.command:
    cmd: kubectl get pods -n {{ metallb_namespace }}
  environment:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml
  register: metallb_pods_status
  changed_when: false

- name: Display MetalLB pods status
  ansible.builtin.debug:
    var: metallb_pods_status.stdout_lines

- name: Display configured IP pools
  ansible.builtin.command:
    cmd: kubectl get ipaddresspool -n {{ metallb_namespace }}
  environment:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml
  register: metallb_pools_status
  changed_when: false
  failed_when: false

- name: Show MetalLB IP pools
  ansible.builtin.debug:
    var: metallb_pools_status.stdout_lines
  when: metallb_pools_status.rc == 0

- name: Display Helm release info
  ansible.builtin.command:
    cmd: helm list -n {{ metallb_namespace }}
  environment:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml
  register: metallb_helm_list
  changed_when: false

- name: Show MetalLB Helm release
  ansible.builtin.debug:
    var: metallb_helm_list.stdout_lines

- name: Save MetalLB version info
  ansible.builtin.debug:
    msg: "MetalLB {{ metallb_chart_version }} is installed via Helm"