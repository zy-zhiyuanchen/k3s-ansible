---
k3s_cluster:
  children:
    server:
      hosts:
        192.168.199.192:
    # agent:
    #   hosts:
    #     192.16.35.12:
    #     192.16.35.13:

  # Required Vars
  vars:
    ansible_port: 22
    ansible_user: czy
    k3s_version: v1.33.3+k3s1
    # The token should be a random string of reasonable length. You can generate
    # one with the following commands:
    # - openssl rand -base64 64
    # - pwgen -s 64 1
    # You can use ansible-vault to encrypt this value / keep it secret.
    # Or you can omit it if not using Vagrant and let the first server automatically generate one.
    token: "token"
    api_endpoint: "{{ hostvars[groups['server'][0]]['ansible_host'] | default(groups['server'][0]) }}"

    #vars for proxy settings if needed
    proxy_env:
      http_proxy: http://127.0.0.1:7890
      https_proxy: http://127.0.0.1:7890
      no_proxy: localhost,127.0.0.1

    # Optional vars
    # extra_server_args: ""
    # extra_agent_args: ""
    # extra_install_envs: { 'INSTALL_K3S_SKIP_SELINUX_RPM': 'true' }
    # cluster_context: k3s-ansible
    # api_port: 6443
    # k3s_server_location: /var/lib/rancher/k3s
    # systemd_dir: /etc/systemd/system
    # extra_service_envs: [ 'ENV_VAR1=VALUE1', 'ENV_VAR2=VALUE2' ]
    # user_kubectl: true, by default kubectl is symlinked and configured for use by ansible_user. Set to false to only kubectl via root user.

    # Manifests or Airgap should be either full paths or relative to the playbook directory.
    # List of locally available manifests to apply to the cluster, useful for PVCs or Traefik modifications.
    # extra_manifests: [ '/path/to/manifest1.yaml', '/path/to/manifest2.yaml' ]
    # airgap_dir: /tmp/k3s-airgap-images

    # uncomment cilium_iface to use cilium cni instead of flannel or calico
    # ensure v4.19.57, v5.1.16, v5.2.0 or more recent kernel
    install_cilium: true
    cilium_mode: native # native when nodes on same subnet or using bgp, else set routed
    cilium_tag: v1.18.1 # cilium version tag
    cilium_hubble: true # enable hubble observability relay and ui

    # if using calico or cilium, you may specify the cluster pod cidr pool
    cluster_cidr: 10.42.0.0/16
    service_cidr: 10.43.0.0/16
    
    # enable cilium bgp control plane for lb services and pod cidrs. disables metallb.
    cilium_bgp: true

    # bgp parameters for cilium cni. only active when cilium_iface is defined and cilium_bgp is true.
    cilium_bgp_lb_cidr: 192.168.31.0/24 # cidr for cilium loadbalancer ipam


    # K3s configuration with custom network settings and disabled components
    server_config_yaml: |
      cluster-cidr: {{ cluster_cidr | default('10.42.0.0/16') }}
      service-cidr: {{ service_cidr | default('10.43.0.0/16') }}
      disable:
        - servicelb
        - traefik
        - network-policy
      flannel-backend: none
      disable-network-policy: true
      disable-kube-proxy: true

    
    # server_config_yaml:  |
    #   This is now an inner yaml file. Maintain the indentation.
    #   YAML here will be placed as the content of /etc/rancher/k3s/config.yaml
    #   See https://docs.k3s.io/installation/configuration#configuration-file
    # agent_config_yaml:  |
    #   Same as server_config_yaml, but for the agent nodes.
    #   YAML here will be placed as the content of /etc/rancher/k3s/config.yaml
    #   See https://docs.k3s.io/installation/configuration#configuration-file
    # registries_config_yaml:  |
    #   Containerd can be configured to connect to private registries and use them to pull images as needed by the kubelet.
    #   YAML here will be placed as the content of /etc/rancher/k3s/registries.yaml
    #   See https://docs.k3s.io/installation/private-registry
